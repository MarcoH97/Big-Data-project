size_subsample = 100,
n_runs = 100)
means_500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 500)
means_500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 500)
means_2500_subsamples_2500_runs <- function_means_subsamples(data = drugs,
size_subsample = 2500,
n_runs = 2500)
means_2500_subsamples_2500_runs <- function_means_subsamples(data = drugs,
size_subsample = 2500,
n_runs = 2500)
# first kernel: fixing number of draws at 500
means_100_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 100,
n_runs = 500)
# first kernel: fixing number of draws at 500
means_100_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 100,
n_runs = 500)
means_500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 500)
means_2500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 2500,
n_runs = 500)
df_means_different_samples_500_runs <- as.data.frame(means_100_subsamples_500_runs)
df_means_different_samples_500_runs <- cbindX(df_means_different_samples_500_runs, as.data.frame(means_500_subsamples_500_runs), as.data.frame(means_2500_subsamples_500_runs))
df_means_different_samples_500_runs <- df_means_different_samples_500_runs %>%
rename("means_softdrug_100_subsamples" = "means_100_subsamples_500_runs",
"means_softdrug_500_subsamples" = "means_500_subsamples_500_runs",
"means_softdrug_2500_subsamples" = "means_2500_subsamples_500_runs")
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(values = c(means_softdrug_100_subsamples="red", means_softdrug_500_subsamples="blue", means_softdrug_2500_subsamples="green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
View(df_means_different_samples_500_runs)
View(df_means_different_samples_500_runs)
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="what", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "red", "red")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("test"="red", "test2"="blue", "test3"="green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_100_subsamples_500_runs")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_500_subsamples_500_runs") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_2500_subsamples_500_runs") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="test1")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="test2") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="test3") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
View(df_means_different_samples_500_runs)
View(df_means_different_samples_500_runs)
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs), color="means_softdrug_500_subsamples") +
geom_density(aes(x = means_2500_subsamples_500_runs), color="means_softdrug_2500_subsamples") +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_softdrug_500_subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="means_softdrug_2500_subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_subsamples
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +
geom_density(aes(x = means_500_subsamples_100_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_softdrug_500_subsamples")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="means_softdrug_2500_subsamples")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_draws
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +
geom_density(aes(x = means_500_subsamples_100_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_softdrug_500_subsamples")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="means_softdrug_2500_subsamples")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_runs
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +
geom_density(aes(x = means_500_subsamples_100_runs, color="means_softdrug_100_draws")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_softdrug_500_draws")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="means_softdrug_2500_draws")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_runs
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +
geom_density(aes(x = means_500_subsamples_100_runs, color="means_softdrug_100_draws")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_softdrug_500_draws")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="means_softdrug_2500_draws")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="bottom")
density_plot_different_runs
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrug_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_softdrug_500_subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="means_softdrug_2500_subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_runs
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +
geom_density(aes(x = means_500_subsamples_100_runs)) +
geom_density(aes(x = means_500_subsamples_500_runs)) +
geom_density(aes(x = means_500_subsamples_2500_runs)) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
theme(legend.position="top")
density_plot_different_runs
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
suppressPackageStartupMessages(library(rmarkdown))
suppressPackageStartupMessages(library(tinytex))
suppressPackageStartupMessages(library(installr))
load("drugs.Rdata")
# if package not installed yet:
# install.packages("glmnet", repos = "https://cran.us.r-project.org")
library(glmnet)
# if package not installed yet:
# install.packages("corrplot", repos = "https://cran.us.r-project.org")
library(corrplot)
# if package not installed yet:
# install.packages("ggplot2", repos =	"https://CRAN.R-project.org/package=ggplot2")
library(ggplot2)
# if package not installed yet:
# install.packages("dplyr")
library(dplyr)
# class of dataset "train"
class(drugs)
# number of males
males = sum(drugs$Gender=="male")
males
# number of males who consume soft drugs
males_softdrug = sum(drugs$Gender=="male" & drugs$Soft_Drug=="TRUE")
males_softdrug
males_softdrug / males
# number of males who consume soft drugs
males_harddrug = sum(drugs$Gender=="male" & drugs$Hard_Drug=="TRUE")
males_harddrug
# number of females
females = sum(drugs$Gender=="female")
females
# number of females who consume soft drugs
females_harddrug = sum(drugs$Gender=="female" & drugs$Hard_Drug=="TRUE")
females_harddrug
# share of male hard drug consumers
share_males_harddrug = males_harddrug / males
share_males_harddrug
# share of female hard drug consumers
share_females_harddrug = females_harddrug / females
share_females_harddrug
# difference between the share of male and female hard drug consumers (in percentage points)
print(share_males_harddrug - share_females_harddrug)
# just FYI: overview of Age groups and Soft_Drug groups
drugs %>% count(Age, Soft_Drug)
# calculate relative shares
share_age16_softdrug = sum(drugs$Age=="16-17 years" & drugs$Soft_Drug=="TRUE") / sum(drugs$Age=="16-17 years")
share_age18_softdrug = sum(drugs$Age=="18-19 years" & drugs$Soft_Drug=="TRUE") / sum(drugs$Age=="18-19 years")
share_age20_softdrug = sum(drugs$Age=="20-24 years"& drugs$Soft_Drug=="TRUE") / sum(drugs$Age=="20-24 years")
print(paste("share of 16-17 year-olds who consume soft drugs: ", round(share_age16_softdrug, 4)))
print(paste("share of 18-19 year-olds who consume soft drugs: ", round(share_age18_softdrug, 4)))
print(paste("share of 20-24 year-olds who consume soft drugs: ", round(share_age20_softdrug, 4)))
print("Tabulating the observations by earnings category (rows) and soft drug consumption (columns):")
table_earnings_softdrug = table(drugs$Earning, drugs$Soft_Drug, useNA = "always")
names(dimnames(table_earnings_softdrug)) <- c("Earnings", "Soft drug consumption")
table_earnings_softdrug
# Perform a chi-squared test to evaluate whether soft drug consumption is independent of the earnings
chisq.test(drugs$Earning, drugs$Soft_Drug)
# just FYI: overview of total soft drug consumption
drugs %>%
count(Soft_Drug)
# 500 times: draw random subsample of 500 observations in your dataset
n_subsample <- 500
repetitions <- 500
subsample <- data.frame(matrix(ncol = 0, nrow = 0))
means_subsamples = c()
for (i in 1:repetitions)
{
subsample <- rbind(subsample, drugs %>% slice_sample(n = n_subsample))
means_subsamples = append(means_subsamples, sum(subsample$Soft_Drug=="TRUE") / sum(subsample$Soft_Drug=="TRUE" | subsample$Soft_Drug=="FALSE"))
subsample <- subsample[0, ]
}
# plot histogram
ggplot(as.data.frame(means_subsamples), aes(x=means_subsamples)) +
geom_histogram(binwidth=0.01, color="black", fill="white") +
labs(title="",
x="Subsample means",
y="Frequency")
# Are the recorded subsample means close to the average drug consumption in the full sample?
# --> Average soft drug consumption in population (full sample):
average_softdrug = sum(drugs$Soft_Drug=="TRUE") / sum(drugs$Soft_Drug=="TRUE" | drugs$Soft_Drug=="FALSE")
average_softdrug
function_means_subsamples <- function(data, size_subsample, n_runs)
{
sample <- data.frame(matrix(ncol = 0, nrow = 0))
means_sample = c()
for (i in 1:n_runs)
{
sample <- rbind(sample, data %>% slice_sample(n = size_subsample))
means_sample = append(means_sample, sum(sample$Soft_Drug=="TRUE") / sum(sample$Soft_Drug=="TRUE" | sample$Soft_Drug=="FALSE"))
sample <- sample[0, ]
}
return(means_sample)
}
means_100_subsamples_100_runs <- function_means_subsamples(data = drugs,
size_subsample = 100,
n_runs = 100)
means_500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 500)
means_2500_subsamples_2500_runs <- function_means_subsamples(data = drugs,
size_subsample = 2500,
n_runs = 2500)
means_100_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 100,
n_runs = 500)
means_500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 500)
means_2500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 2500,
n_runs = 500)
df_means_different_samples_500_runs <- as.data.frame(means_100_subsamples_500_runs)
View(df_means_different_samples_500_runs)
View(df_means_different_samples_500_runs)
df_means_different_samples_500_runs <- cbindX(df_means_different_samples_500_runs, as.data.frame(means_500_subsamples_500_runs), as.data.frame(means_2500_subsamples_500_runs))
View(df_means_different_samples_500_runs)
View(df_means_different_samples_500_runs)
View(df_means_different_samples_500_runs)
View(df_means_different_samples_500_runs)
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_100_subsamples_500_runs")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_500_subsamples_500_runs")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="means_2500_subsamples_500_runs")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="test1")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="test2")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="test3")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="means_softdrugs_100_subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="means_softdrugs_500_subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="means_softdrugs_2500_subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="100 subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="2500 subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="top")
density_plot_different_subsamples
View(df_means_different_samples_500_runs)
View(df_means_different_samples_500_runs)
df_means_different_samples_500_runs <- factor(df_means_different_samples_500_runs, levels = c("means_softdrug_100_subsamples", "means_softdrug_500_subsamples", "means_softdrug_2500_subsamples"))
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="100 subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="2500 subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
theme(legend.position="top")
df_means_different_samples_500_runs <- as.data.frame(means_100_subsamples_500_runs)
df_means_different_samples_500_runs <- cbindX(df_means_different_samples_500_runs, as.data.frame(means_500_subsamples_500_runs), as.data.frame(means_2500_subsamples_500_runs))
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="100 subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="2500 subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
scale_fill_discrete(breaks=c('100 subsamples', '500 subsamples', '2500 subsamples')) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="100 subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="2500 subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "blue", "green")) +
scale_color_discrete(breaks=c('100 subsamples', '500 subsamples', '2500 subsamples')) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="100 subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="2500 subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "green", "blue")) +
scale_color_discrete(breaks=c('100 subsamples', '500 subsamples', '2500 subsamples')) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +   geom_density(aes(x = means_500_subsamples_100_runs, color="100 draws")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 draws")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="2500 draws")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "green", "blue")) +
scale_color_discrete(breaks=c('100 draws', '500 draws', '2500 draws')) +
theme(legend.position="top")
# second kernel: fixing subsample size at 500; visualizing density estimate for the three different number of draws.
means_500_subsamples_100_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 100)
means_500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 500)
means_500_subsamples_500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 500)
means_500_subsamples_2500_runs <- function_means_subsamples(data = drugs,
size_subsample = 500,
n_runs = 2500)
df_means_500_subsamples_different_runs <- as.data.frame(means_500_subsamples_100_runs)
df_means_500_subsamples_different_runs <- cbindX(df_means_500_subsamples_different_runs, as.data.frame(means_500_subsamples_500_runs), as.data.frame(means_500_subsamples_2500_runs))
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +   geom_density(aes(x = means_500_subsamples_100_runs, color="100 draws")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 draws")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="2500 draws")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
scale_colour_manual(name="", values = c("red", "green", "blue")) +
scale_color_discrete(breaks=c('100 draws', '500 draws', '2500 draws')) +
theme(legend.position="top")
density_plot_different_runs
density_plot_different_subsamples
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="100 subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="2500 subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
xlim(0.20, 0.60) +
ylim(0,50) +
scale_colour_manual(name="", values = c("red", "green", "blue")) +
scale_color_discrete(breaks=c('100 subsamples', '500 subsamples', '2500 subsamples')) +
theme(legend.position="top")
density_plot_different_subsamples
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +   geom_density(aes(x = means_500_subsamples_100_runs, color="100 draws")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 draws")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="2500 draws")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
xlim(0.20, 0.60) +
ylim(0,50) +
scale_colour_manual(name="", values = c("red", "green", "blue")) +
scale_color_discrete(breaks=c('100 draws', '500 draws', '2500 draws')) +
theme(legend.position="top")
density_plot_different_runs
density_plot_different_subsamples <- ggplot(data = df_means_different_samples_500_runs) +   geom_density(aes(x = means_100_subsamples_500_runs, color="100 subsamples")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 subsamples")) +
geom_density(aes(x = means_2500_subsamples_500_runs, color="2500 subsamples")) +
labs(title="Density estimate for different subsample sizes (500 draws)", x="Mean soft drug consumption", y = "Density") +
xlim(0.20, 0.60) +
ylim(0,50) +
scale_colour_manual(name="", values = c("red", "green", "blue")) +
scale_color_discrete(breaks=c('100 subsamples', '500 subsamples', '2500 subsamples')) +
theme(legend.position="top")
density_plot_different_subsamples
# second kernel: visualizing density estimate for the three different number of draws
density_plot_different_runs <- ggplot(data = df_means_500_subsamples_different_runs) +   geom_density(aes(x = means_500_subsamples_100_runs, color="100 draws")) +
geom_density(aes(x = means_500_subsamples_500_runs, color="500 draws")) +
geom_density(aes(x = means_500_subsamples_2500_runs, color="2500 draws")) +
labs(title="Density estimate for different number of draws (500 subsamples)", x="Mean soft drug consumption", y = "Density") +
xlim(0.20, 0.60) +
ylim(0,50) +
scale_colour_manual(name="", values = c("red", "green", "blue")) +
scale_color_discrete(breaks=c('100 draws', '500 draws', '2500 draws')) +
theme(legend.position="top")
density_plot_different_runs
gc()
# Assisted by ChatGPT (https://chat.openai.com/) while writing the code below.
# Load packages
library(combinat)
library(foreach)
library(doParallel)
library(readxl)
library(progress)
library(dplyr)
library(parallel)
library(future.apply)
library(progressr)
library(RSQLite)
library(DBI)
library(ggplot2)
library(reshape2)
library(scales)
library(zoo)
library(gridExtra)
library(xts)
# Assisted by ChatGPT (https://chat.openai.com/) while writing the code below.
# Load packages
library(combinat)
library(foreach)
library(doParallel)
library(readxl)
library(progress)
library(dplyr)
library(parallel)
library(future.apply)
library(progressr)
library(RSQLite)
library(DBI)
library(ggplot2)
library(reshape2)
library(scales)
library(zoo)
library(gridExtra)
library(xts)
gc()
# Get the directory path of the current code file
PATH <- dirname(rstudioapi::getSourceEditorContext()$path)
# Set the working directory to that of the current code file
setwd(PATH)
# Load the objects from 'my_workspace.RData' into the workspace
# It's a good practice to start a new session or clear the workspace before loading the saved objects.
load('all_data_max_4_comb.RData')
# Load functions file
source("BDA_BDBD_functions - Luca.R")
## Max 2 combinations: yearly/quarterly/monthly/weekly/daily rebalancing
xts_strategies_max_2_comb_yearly_rebal <- xts_generate_weighted_cols(xts_return_series = xts_index_yearly_returns_CHF,
max_comb_size = 2)
# Assisted by ChatGPT (https://chat.openai.com/) while writing the code below.
# Load packages
library(combinat)
library(foreach)
library(doParallel)
library(readxl)
library(progress)
library(dplyr)
library(parallel)
library(future.apply)
library(progressr)
library(RSQLite)
library(DBI)
library(ggplot2)
library(reshape2)
library(scales)
library(zoo)
library(gridExtra)
library(xts)
gc()
gc()
## Max 2 combinations: yearly/quarterly/monthly/weekly/daily rebalancing
xts_strategies_max_2_comb_yearly_rebal <- xts_generate_weighted_cols(xts_return_series = xts_index_yearly_returns_CHF,
max_comb_size = 2)
# [1] "Execution time:  1.55694222450256 seconds"
xts_strategies_max_2_comb_quarterly_rebal <- xts_generate_weighted_cols(xts_return_series = xts_index_quarterly_returns_CHF,
max_comb_size = 2)
# [1] "Execution time:  1.8990490436554 seconds"
xts_strategies_max_2_comb_monthly_rebal <- xts_generate_weighted_cols(xts_return_series = xts_index_monthly_returns_CHF,
max_comb_size = 2)
# [1] "Execution time:  1.95903587341309 seconds"
xts_strategies_max_2_comb_weekly_rebal <- xts_generate_weighted_cols(xts_return_series = xts_index_weekly_returns_CHF,
max_comb_size = 2)
# [1] "Execution time:  3.07245182991028 seconds"
xts_strategies_max_2_comb_daily_rebal <- xts_generate_weighted_cols(xts_return_series = xts_index_daily_returns_CHF,
max_comb_size = 2)
# [1] "Execution time:  6.8100950717926 seconds"
gc()
# EXECUTION TIME ???
xts_results_simplified_optimal_strategy_max_3_comb_yearly_rebal <- xts_determine_optimal_strategy_simplified(xts_return_series = xts_strategies_max_3_comb_yearly_rebal,
time_horizon_years = 12,
minimum_allowable_percentage = 0.75,
granularity = "yearly")
